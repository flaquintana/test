{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar.component.html","webpack:///./src/app/components/navbar.component.ts","webpack:///./src/app/core.module.ts","webpack:///./src/app/directives/mail.validate.directive.ts","webpack:///./src/app/domain/test_db/base/user.base.ts","webpack:///./src/app/domain/test_db/user.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/security/auth.guard.ts","webpack:///./src/app/security/auth.interceptor.ts","webpack:///./src/app/security/authentication.service.ts","webpack:///./src/app/security/current-user.ts","webpack:///./src/app/security/services/security.service.ts","webpack:///./src/app/services/base/ricette.base.service.ts","webpack:///./src/app/services/base/user.base.service.ts","webpack:///./src/app/services/ricette.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./pages/home/home.module\": [\n\t\t\"./src/app/pages/home/home.module.ts\",\n\t\t\"pages-home-home-module\"\n\t],\n\t\"./pages/login/login.module\": [\n\t\t\"./src/app/pages/login/login.module.ts\",\n\t\t\"pages-login-login-module~security-manage-user-edit-user-manage-user-edit-module~security-profile-pro~b5fc9046\",\n\t\t\"pages-login-login-module\"\n\t],\n\t\"./pages/ricette-edit/ricette-edit.module\": [\n\t\t\"./src/app/pages/ricette-edit/ricette-edit.module.ts\",\n\t\t\"pages-ricette-edit-ricette-edit-module\"\n\t],\n\t\"./pages/ricette-list/ricette-list.module\": [\n\t\t\"./src/app/pages/ricette-list/ricette-list.module.ts\",\n\t\t\"pages-ricette-list-ricette-list-module\"\n\t],\n\t\"./security/manage-user/edit-user/manage-user-edit.module\": [\n\t\t\"./src/app/security/manage-user/edit-user/manage-user-edit.module.ts\",\n\t\t\"pages-login-login-module~security-manage-user-edit-user-manage-user-edit-module~security-profile-pro~b5fc9046\",\n\t\t\"security-manage-user-edit-user-manage-user-edit-module\"\n\t],\n\t\"./security/manage-user/list-user/manage-user-list.module\": [\n\t\t\"./src/app/security/manage-user/list-user/manage-user-list.module.ts\",\n\t\t\"security-manage-user-list-user-manage-user-list-module\"\n\t],\n\t\"./security/profile/profile.module\": [\n\t\t\"./src/app/security/profile/profile.module.ts\",\n\t\t\"pages-login-login-module~security-manage-user-edit-user-manage-user-edit-module~security-profile-pro~b5fc9046\",\n\t\t\"security-profile-profile-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","// DEPENDENCIES\nimport { NgModule } from '@angular/core';\nimport { CanActivate, RouterModule, Routes } from '@angular/router';\n\n/* START MY VIEWS IMPORT */\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\nimport { HomeComponent} from './pages/home/home.component';\r\nimport { RicetteEditComponent} from './pages/ricette-edit/ricette-edit.component';\r\nimport { RicetteListComponent} from './pages/ricette-list/ricette-list.component';\r\n\n/* END MY VIEWS IMPORT */\n\n// SECURITY\nimport { LoginComponent } from './pages/login/login.component';\nimport { ManageUserEditComponent } from './security/manage-user/edit-user/manage-user-edit.component';\nimport { ManageUserListComponent } from './security/manage-user/list-user/manage-user-list.component';\nimport { ProfileComponent } from './security/profile/profile.component';\nimport { AuthGuard } from './security/auth.guard';\n\n/**\n * WEB APP ROUTES\n */\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full'  },\n\n    /* START MY VIEWS */\n\r\n    { path: 'home',  loadChildren: './pages/home/home.module#HomeModule' , canActivate: [AuthGuard] },\r\n    { path: 'ricettes/:id',  loadChildren: './pages/ricette-edit/ricette-edit.module#RicetteEditModule' , canActivate: [AuthGuard] },\r\n    { path: 'ricettes',  loadChildren: './pages/ricette-list/ricette-list.module#RicetteListModule' , canActivate: [AuthGuard] },\r\n\r\n /* END MY VIEWS */\n\n    // SECURITY\n    { path: 'manage-users',  loadChildren: './security/manage-user/list-user/manage-user-list.module#ManageUserListModule', canActivate: [AuthGuard], data: ['ADMIN']},\n    { path: 'manage-users/:id',  loadChildren: './security/manage-user/edit-user/manage-user-edit.module#ManageUserEditModule', canActivate: [AuthGuard], data: ['ADMIN']},\n    { path: 'profile',  loadChildren: './security/profile/profile.module#ProfileModule', canActivate: [AuthGuard] },\n    { path: 'login', loadChildren: './pages/login/login.module#LoginModule'}\n];\n\n/**\n * ROUTING MODULE\n */\n@NgModule({\n    imports: [ RouterModule.forRoot(routes) ],\n    exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}\n","module.exports = \"<!-- NAVBAR -->\\r\\n<app-navbar></app-navbar>\\r\\n\\r\\n<!-- CONTENT -->\\r\\n<div class=\\\"container-fluid mb-40\\\">\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n<!-- FOOTER -->\\r\\n<div class=\\\"footer\\\">\\r\\n    Created by\\r\\n    <a href=\\\"https://www.skaffolder.com\\\" target=\\\"_blank\\\">&copy; Skaffolder</a>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-test',\r\n    templateUrl: './app.component.html',\r\n})\r\n/**\r\n * THIS COMPONENT CONTAINS THE TEMPLATE OF WEB SITE\r\n */\r\nexport class AppComponent {\r\n\r\n}\r\n","// DEPENDENCIES\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n// SHARED MODULE\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n// CORE MODULE\r\nimport { CoreModule } from './core.module';\r\n\r\n// LAYOUT\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar.component';\r\n\r\n// DIRECTIVES\r\nimport { MailValidator } from './directives/mail.validate.directive';\r\n\r\n// DECLARE APPLICATION MODULE\r\n@NgModule({\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule, // ROUTES\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    CoreModule\r\n  ],\r\n  declarations: [\r\n    // LAYOUT\r\n    AppComponent,\r\n    NavbarComponent,\r\n    MailValidator,\r\n  ],\r\n  providers:    [\r\n  ],\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n    <a class=\\\"navbar-brand ml-20\\\" routerLink=\\\"\\\">\\r\\n        <svg class=\\\"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 92 74\\\" height=\\\"48\\\">\\r\\n            <g fill=\\\"#FFF\\\">\\r\\n                <path d=\\\"M31.799 71.9V15.7h15.1V72h-15.1zM91.099 28.5h-13.8v23.1c0 2.3.1 3.8.2 4.8.1.9.5 1.7 1.2 2.4s1.8 1 3.3 1l8.6-.2.7 12c-5 1.1-8.9 1.7-11.5 1.7-6.8 0-11.4-1.5-13.8-4.6-2.5-3-3.7-8.6-3.7-16.8V0h15.1v15.6h13.8v12.9zM9.099 32.8c-2.6 0-4.8-.9-6.5-2.7s-2.6-4-2.6-6.6.9-4.8 2.5-6.6c1.7-1.8 3.9-2.6 6.5-2.6s4.8.9 6.5 2.7 2.5 4 2.5 6.7-.8 4.8-2.5 6.6c-1.6 1.6-3.7 2.5-6.4 2.5z\\\"></path>\\r\\n            </g>\\r\\n        </svg>\\r\\n        <span class=\\\"ml-20\\\">\\r\\n            test\\r\\n        </span>\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n        aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div *ngIf=\\\"user\\\" class=\\\"collapse navbar-collapse ml-20\\\" id=\\\"navbarSupportedContent\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home </a>\\r\\n            </li>\\r\\n            <!-- START LINK MENU -->\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n               <a class=\\\"nav-link\\\" routerLink=\\\"/ricettes\\\">Ricette</a>\\r\\n            </li>\\r\\n        \\r\\n <!-- END LINK MENU -->\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"user\\\" class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\">\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n            <li class=\\\"nav-item dropdown\\\">\\r\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\r\\n                    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    Benvenuto {{user.username}}\\r\\n                </a>\\r\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/manage-users\\\">Gestisci utenti</a>\\r\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/profile\\\">Profilo</a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"authenticationService.logout()\\\">Logout</a>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n    </div>\\r\\n</nav>\"","import { Component } from '@angular/core';\r\nimport { store } from 'src/app/security/current-user';\r\nimport { OnInit } from '@angular/core';\r\nimport { User } from 'src/app/domain/test_db/user';\r\nimport { AuthenticationService } from 'src/app/security/authentication.service';\r\n\r\n/**\r\n * This component manage the NavBar\r\n *\r\n * @class NavbarComponent\r\n */\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n    private user: User;\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    ngOnInit() {\r\n        this.authenticationService.getUser().subscribe(user => this.user = user, err => this.user = null);\r\n        store.currentUser$.subscribe(user => this.user = user);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\n/* START MY SERVICES IMPORTS*/\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\nimport { RicetteService } from './services/ricette.service';\r\nimport { UserService } from './services/user.service';\r\n\n/* END MY SERVICES IMPORTS*/\nimport { AuthGuard } from './security/auth.guard';\nimport { AuthenticationService } from './security/authentication.service';\nimport { SecurityService } from './security/services/security.service';\nimport { HTTP_INTERCEPTORS } from '../../node_modules/@angular/common/http';\nimport { AuthInterceptor } from './security/auth.interceptor';\n\n@NgModule({\n  imports: [],\n  providers: [\n    /* START PROVIDERS */\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\n    RicetteService,\r\n    UserService,\r\n /* END PROVIDERS */\n\n    // SECURITY\n    AuthGuard,\n    AuthenticationService,\n    SecurityService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  exports: []\n})\nexport class CoreModule {\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { ElementRef } from '@angular/core';\r\nimport { Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[isMail]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: MailValidator, multi: true }]\r\n})\r\nexport class MailValidator implements Validator {\r\n  constructor(private elRef: ElementRef, private renderer: Renderer2) { }\r\n  validate(control: AbstractControl): { [key: string]: any } {\r\n    // self value (e.g. retype password)\r\n    const mail = control.value;\r\n\r\n    const regExpMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (!mail) return null;\r\n\r\n    if (!regExpMail.test(mail)) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'is-invalid');\r\n      return {\r\n        validateEqual: false\r\n      };\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'is-invalid');\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","/**\r\n *\r\n *\r\n  _____                      _              _ _ _     _   _     _        __ _ _\r\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\r\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\r\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\r\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\r\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\r\n\r\n\r\n * DO NOT EDIT THIS FILE!!\r\n *\r\n *  TO CUSTOMIZE UserBase PLEASE EDIT ../user.ts\r\n *\r\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\r\n *\r\n */\r\n\r\n/**\r\n * This is the model of User object\r\n *\r\n */\r\nexport class UserBase {\r\n\r\n    constructor() { }\r\n\r\n    public _id: string;\r\n    public password: string;\r\n    public username: string;\r\n}\r\n","import { UserBase } from './base/user.base';\r\n\r\n/**\r\n * YOU CAN OVERRIDE HERE UserBase.ts\r\n */\r\nexport class User extends UserBase {\r\n\r\n    // Insert here your custom attributes and function\r\n\r\n    // Functions for User\r\n\r\n    public token: string;\r\n\tpublic roles: string[];\r\n\r\n    constructor(\r\n        _id?: string,\r\n        username?: string,\r\n        token?: string,\r\n        roles?: string[]\r\n    ) {\r\n        super();\r\n        this._id = _id;\r\n        this.username = username;\r\n        this.token = token;\r\n        this.roles = roles;\r\n    }\r\n\r\n    // UTILS FUNCTIONS\r\n\r\n    /**\r\n     * Check if logged user is admin\r\n     */\r\n    isAdmin(): boolean {\r\n        if (!this.roles)\r\n            return false;\r\n        return this.roles.indexOf('ADMIN') === 0;\r\n    }\r\n\r\n    /**\r\n     * Check if logged user has one role\r\n     */\r\n    hasRole(role: string | Array<string>): boolean {\r\n        if (!this.roles) return false;\r\n\r\n        if (typeof role === 'string') {\r\n            return (this.roles.indexOf(role) !== -1);\r\n        } else {\r\n            const found = role.filter(rol => {\r\n                return (this.roles.indexOf(rol) !== -1);\r\n            });\r\n            return found.length > 0;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * This pipe allows to filter a list of items\r\n *\r\n * @example\r\n *  <div *ngFor=\"let item of list | search:{'field_1' : search1, 'field_2' : search2 }\">\r\n *  </div>\r\n *\r\n */\r\n@Pipe({ name: 'search' })\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n    transform(list: any[], filter: any): any[] {\r\n\r\n        // if list is null or empty\r\n        if (!list || !list.length) return [];\r\n\r\n        // map objects in filter\r\n        Object.keys(filter).map(function (fieldName) {\r\n\r\n            // get key to search\r\n            const key: string = filter[fieldName];\r\n            if (key) {\r\n\r\n                // filter list for esch type of filter\r\n                list = list.filter(item => {\r\n                    const field = item[fieldName];\r\n\r\n                    // filter string\r\n                    if (typeof field === 'string') {\r\n                        return field.toLowerCase().indexOf(key.toLocaleLowerCase()) !== -1;\r\n                    }\r\n\r\n                    if (typeof field === 'boolean') {\r\n                        if (typeof key === 'boolean')\r\n                            return field === key;\r\n                    }\r\n\r\n                    if (typeof field === 'number') {\r\n                        return field.toString().toLowerCase().indexOf(key.toString().toLocaleLowerCase()) !== -1;\r\n                    }\r\n\r\n                    // filter array\r\n                    if (Array.isArray(field)) {\r\n                        // find key in list\r\n                        const found = field.filter(el => {\r\n                            if (el.toLowerCase().indexOf(key.toLocaleLowerCase()) !== -1)\r\n                                return el;\r\n                        });\r\n\r\n                        return found.length > 0;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n}\r\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthenticationService } from 'src/app/security/authentication.service';\r\nimport { store } from 'src/app/security/current-user';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/domain/test_db/user';\r\n\r\n/**\r\n * This class intercept route change and check for security\r\n */\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    /**\r\n     * Check routes permission\r\n     */\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n\r\n        // Get authorized roles for route\r\n        const roles = [];\r\n        Object.keys(route.data).forEach(key => roles.push(route.data[key]));\r\n\r\n        // Return observable\r\n        return new Observable<boolean>((ob: any) => {\r\n            // Get logged user\r\n            this.authenticationService.getUser().subscribe(user => {\r\n                if (!user) {\r\n                    // Not logged\r\n                    ob.next(false);\r\n                    this.router.navigate(['/login']);\r\n                } else {\r\n                    // Logged user\r\n                    const userObj: User = new User(user._id, user.username, user.token, user.roles);\r\n                    if (roles && roles.length > 0) {\r\n                        // Check roles\r\n                        if (userObj.hasRole(roles)) {\r\n                            ob.next(true);\r\n                        } else {\r\n                            ob.next(false);\r\n                            this.router.navigate(['/login']);\r\n                        }\r\n                    }\r\n                    ob.next(true);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * This interceptor get token from sessionStorage if it is set and put the JWT token in the header Authorization var\r\n */\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        // Get token\r\n        const token = sessionStorage.getItem('token') || localStorage.getItem('token');\r\n        if (token) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + token)\r\n            });\r\n            return next.handle(cloned);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/domain/test_db/user';\r\nimport { store } from 'src/app/security/current-user';\r\nimport { SecurityService } from 'src/app/security/services/security.service';\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * This service manage the Authentication\r\n */\r\n@Injectable()\r\nexport class AuthenticationService {\r\n    constructor(\r\n        private securityService: SecurityService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    /**\r\n     * Get the logged user\r\n     */\r\n    public getUser(): Observable<User> {\r\n        return new Observable<User>((ob: any) => {\r\n\r\n            // Get JWT token from browser storage\r\n            const token = sessionStorage.getItem('token') || localStorage.getItem('token');\r\n\r\n            // Get user from store\r\n            store.currentUser$.subscribe(user => {\r\n                if (token && user) {\r\n                    // User logged and stored token\r\n                    ob.next(user);\r\n                } else if (token && !user) {\r\n                    // If refresh page and have token but not logged user\r\n                    // Verify token and get user\r\n                    this.securityService.verifyToken(token).subscribe(\r\n                        usr => {\r\n                            if (!usr || (!usr._id && !usr.success)) {\r\n                                ob.next(undefined);\r\n                            } else {\r\n                                ob.next(usr);\r\n                            }\r\n                        }\r\n                    );\r\n                } else {\r\n                    // Logged user\r\n                    ob.next(user);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logout function\r\n     */\r\n    logout() {\r\n        // Clear token and remove user from local storage to log user logout\r\n        localStorage.removeItem('token');\r\n        sessionStorage.removeItem('token');\r\n        store.setUser(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n}","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from 'src/app/domain/test_db/user';\r\nimport * as _ from 'lodash';\r\n\r\n/**\r\n * Store the current user\r\n */\r\nclass CurrentUser {\r\n    private currentUserSubject = new BehaviorSubject(null);\r\n    public currentUser$: Observable<User> = this.currentUserSubject.asObservable();\r\n\r\n    setUser(user: User) {\r\n        this.currentUserSubject.next(_.cloneDeep(user));\r\n    }\r\n}\r\n\r\nexport const store = new CurrentUser();\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable} from 'rxjs';\r\nimport { User } from 'src/app/domain/test_db/user';\r\nimport { shareReplay, map, tap } from 'rxjs/operators';\r\n\r\n/**\r\n * Manage rest API about security\r\n */\r\n@Injectable()\r\nexport class SecurityService {\r\n    contextUrl = environment.endpoint;\r\n    constructor(\r\n        private http: HttpClient,\r\n    ) { }\r\n\r\n    /**\r\n     * Login by username and md5 password\r\n     *\r\n     * @param {string} username username for login\r\n     * @param {string} password password in MD5\r\n     * @param {boolean} remember store token in local storage\r\n     * @returns {Observable<User>} logged user\r\n     */\r\n    login(username: string, password: string, remember: boolean): Observable<User> {\r\n        return this.http.post<User>(this.contextUrl + '/login', { username: username, password: password })\r\n            .pipe(\r\n                tap(user => this.setSession(user.token)),\r\n                tap(user => { if (remember) this.setLocal(user.token); }),\r\n                map(user => user),\r\n                shareReplay()\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Verify JWT token\r\n     *\r\n     * @param {string} token JWT token to verify\r\n     * @returns {Observable<any>} logged user or error message\r\n     */\r\n    verifyToken(token: string): Observable<any> {\r\n        return this.http.post<any>(this.contextUrl + '/verifyToken', { token: token })\r\n            .pipe(\r\n                map(user => user)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Change password of current user\r\n     *\r\n     * @param {string} passwordNew New password to set in MD5\r\n     * @param {string} passwordOld Old password to check in MD5\r\n     * @returns {Observable<void>} Success or error\r\n     */\r\n    changePassword(passwordNew: string, passwordOld: string): Observable<void> {\r\n        return this.http\r\n            .post<void>(this.contextUrl + '/changePassword', {\r\n                passwordNew: passwordNew,\r\n                passwordOld: passwordOld\r\n            })\r\n            .pipe(\r\n                map(response => response)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Set token in sessionStorage\r\n     *\r\n     * @private\r\n     * @param {*} token JWT token to set in sessionStorage\r\n     */\r\n    private setSession(token) {\r\n        sessionStorage.setItem('token', token);\r\n    }\r\n\r\n    /**\r\n     * Set token in localStorage\r\n     *\r\n     * @private\r\n     * @param {*} token JWT token to set in localStorage\r\n     */\r\n    private setLocal(token) {\r\n        localStorage.setItem('token', token);\r\n    }\r\n\r\n}\r\n","/**\r\n *\r\n *\r\n  _____                      _              _ _ _     _   _     _        __ _ _\r\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\r\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\r\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\r\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\r\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\r\n\r\n * DO NOT EDIT THIS FILE!!\r\n *\r\n *  FOR CUSTOMIZE ricetteBaseService PLEASE EDIT ../ricette.service.ts\r\n *\r\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\r\n *\r\n */\r\n // DEPENDENCIES\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// CONFIG\r\nimport { environment } from '../../../environments/environment';\r\n\r\n// MODEL\r\nimport { Ricette } from '../../domain/test_db/ricette';\r\n\r\n/**\r\n * THIS SERVICE MAKE HTTP REQUEST TO SERVER, FOR CUSTOMIZE IT EDIT ../Ricette.service.ts\r\n */\r\n\r\n/*\r\n * SCHEMA DB Ricette\r\n *\r\n\t{\r\n\t\tIngredienti: {\r\n\t\t\ttype: 'String',\r\n\t\t\trequired : true\r\n\t\t},\r\n\t\tNome: {\r\n\t\t\ttype: 'String',\r\n\t\t\trequired : true\r\n\t\t},\r\n\t\tProcedimento: {\r\n\t\t\ttype: 'String',\r\n\t\t\trequired : true\r\n\t\t},\r\n\t\t//RELATIONS\r\n\t\t//EXTERNAL RELATIONS\r\n\t\tPosseduta: {\r\n\t\t\ttype: Schema.ObjectId,\r\n\t\t\tref : \"Ricette\"\r\n\t\t},\r\n\t}\r\n *\r\n */\r\n@Injectable()\r\nexport class RicetteBaseService {\r\n\r\n    contextUrl: string = environment.endpoint + '/ricettes';\r\n    constructor(\r\n        protected http: HttpClient\r\n        ) { }\r\n\r\n    // CRUD METHODS\r\n\r\n    /**\r\n    * RicetteService.create\r\n    *   @description CRUD ACTION create\r\n    *\r\n    */\r\n    create(item: Ricette): Observable<Ricette> {\r\n        return this.http\r\n            .post<Ricette>(this.contextUrl, item)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * RicetteService.delete\r\n    *   @description CRUD ACTION delete\r\n    *   @param ObjectId id Id\r\n    *\r\n    */\r\n    remove(id: string): Observable<void> {\r\n        return this.http\r\n            .delete<void>(this.contextUrl + '/' + id)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * RicetteService.findByPosseduta\r\n    *   @description CRUD ACTION findByPosseduta\r\n    *   @param Objectid key Id della risorsa Posseduta da cercare\r\n    *\r\n    */\r\n    findByPosseduta(id: string): Observable<Ricette[]> {\r\n        return this.http\r\n            .get<Ricette[]>(this.contextUrl + '/findByPosseduta/' + id)\r\n            .pipe(\r\n                map(response => response)\r\n            );\r\n    }\r\n\r\n    /**\r\n    * RicetteService.get\r\n    *   @description CRUD ACTION get\r\n    *   @param ObjectId id Id \r\n    *\r\n    */\r\n    get(id: string): Observable<Ricette> {\r\n        return this.http\r\n            .get<Ricette>(this.contextUrl + '/' + id)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * RicetteService.list\r\n    *   @description CRUD ACTION list\r\n    *\r\n    */\r\n    list(): Observable<Ricette[]> {\r\n        return this.http\r\n            .get<Ricette[]>(this.contextUrl)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * RicetteService.update\r\n    *   @description CRUD ACTION update\r\n    *   @param ObjectId id Id\r\n    *\r\n    */\r\n    update(item: Ricette): Observable<Ricette> {\r\n        return this.http\r\n            .post<Ricette>(this.contextUrl + '/' + item._id, item)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n\r\n    // Custom APIs\r\n\r\n}\r\n","/**\r\n *\r\n *\r\n  _____                      _              _ _ _     _   _     _        __ _ _\r\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\r\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\r\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\r\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\r\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\r\n\r\n * DO NOT EDIT THIS FILE!!\r\n *\r\n *  FOR CUSTOMIZE userBaseService PLEASE EDIT ../user.service.ts\r\n *\r\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\r\n *\r\n */\r\n // DEPENDENCIES\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// CONFIG\r\nimport { environment } from '../../../environments/environment';\r\n\r\n// MODEL\r\nimport { User } from '../../domain/test_db/user';\r\n\r\n/**\r\n * THIS SERVICE MAKE HTTP REQUEST TO SERVER, FOR CUSTOMIZE IT EDIT ../User.service.ts\r\n */\r\n\r\n/*\r\n * SCHEMA DB User\r\n *\r\n\t{\r\n\t\tpassword: {\r\n\t\t\ttype: 'String',\r\n\t\t\trequired : true\r\n\t\t},\r\n\t\tusername: {\r\n\t\t\ttype: 'String',\r\n\t\t\trequired : true,\r\n\t\t\tunique : true, \r\n\t\t},\r\n\t\t//RELATIONS\r\n\t\t//EXTERNAL RELATIONS\r\n\t\tPosseduta: {\r\n\t\t\ttype: Schema.ObjectId,\r\n\t\t\tref : \"Ricette\"\r\n\t\t},\r\n\t}\r\n *\r\n */\r\n@Injectable()\r\nexport class UserBaseService {\r\n\r\n    contextUrl: string = environment.endpoint + '/Users';\r\n    constructor(\r\n        protected http: HttpClient\r\n        ) { }\r\n\r\n    // CRUD METHODS\r\n\r\n    /**\r\n    * UserService.create\r\n    *   @description CRUD ACTION create\r\n    *\r\n    */\r\n    create(item: User): Observable<User> {\r\n        return this.http\r\n            .post<User>(this.contextUrl, item)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * UserService.delete\r\n    *   @description CRUD ACTION delete\r\n    *   @param ObjectId id Id\r\n    *\r\n    */\r\n    remove(id: string): Observable<void> {\r\n        return this.http\r\n            .delete<void>(this.contextUrl + '/' + id)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * UserService.findByHa\r\n    *   @description CRUD ACTION findByHa\r\n    *   @param Objectid key Id della risorsa Ha da cercare\r\n    *\r\n    */\r\n    findByHa(id: string): Observable<User[]> {\r\n        return this.http\r\n            .get<User[]>(this.contextUrl + '/findByHa/' + id)\r\n            .pipe(\r\n                map(response => response)\r\n            );\r\n    }\r\n\r\n    /**\r\n    * UserService.get\r\n    *   @description CRUD ACTION get\r\n    *   @param ObjectId id Id \r\n    *\r\n    */\r\n    get(id: string): Observable<User> {\r\n        return this.http\r\n            .get<User>(this.contextUrl + '/' + id)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * UserService.list\r\n    *   @description CRUD ACTION list\r\n    *\r\n    */\r\n    list(): Observable<User[]> {\r\n        return this.http\r\n            .get<User[]>(this.contextUrl)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n    /**\r\n    * UserService.update\r\n    *   @description CRUD ACTION update\r\n    *   @param ObjectId id Id\r\n    *\r\n    */\r\n    update(item: User): Observable<User> {\r\n        return this.http\r\n            .post<User>(this.contextUrl + '/' + item._id, item)\r\n            .pipe(map(data => data));\r\n    }\r\n\r\n\r\n    // Custom APIs\r\n\r\n\r\n    /**\r\n    * UserService.changePassword\r\n    *   @description Change password of user from admin\r\n    *   @returns object\r\n    *\r\n    */\r\n    changePassword(...params: any[]): Observable<any> {\r\n        return this.http\r\n            .post<any>(this.contextUrl + '/{id}/changePassword', {})\r\n            .pipe(\r\n                map(response => response)\r\n            );\r\n    }\r\n\r\n}\r\n","// BASE SERVICE\r\nimport { RicetteBaseService } from './base/ricette.base.service';\r\n\r\n\r\n// start documentation\r\n/**\r\n * Custom APIs\r\n *\r\n */\r\n// end documentation\r\n\r\n/**\r\n * YOU CAN OVERRIDE HERE RicetteBaseService\r\n */\r\nexport class RicetteService extends RicetteBaseService {\r\n\r\n}\r\n","// DEPENDENCIES\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n// BASE SERVICE\r\nimport { UserBaseService } from './base/user.base.service';\r\n\r\n\r\n// start documentation\r\n/**\r\n * Custom APIs\r\n *\r\n * Service.changePassword\r\n *\t@description Change password of user from admin\r\n *\t@returns object\r\n *\r\n */\r\n// end documentation\r\n\r\n/**\r\n * YOU CAN OVERRIDE HERE UserBaseService\r\n */\r\n@Injectable()\r\nexport class UserService extends UserBaseService {\r\n\r\n    // CONSTRUCTOR\r\n    constructor(\r\n        http: HttpClient,\r\n    ) {\r\n        super(http);\r\n    }\r\n\r\n    /*\r\n    Name: changePassword\r\n    Description: Change password of user from admin\r\n    Params:\r\n        id: id of user\r\n        passwordNew: new password in MD5\r\n        passwordAdmin: admin password in MD5\r\n    */\r\n    changePassword(id: String, passwordNew: string, passwordAdmin: string): Observable<void> {\r\n        return this.http\r\n            .post<void>(this.contextUrl + '/' + id + '/changePassword', {\r\n                passwordNew: passwordNew,\r\n                passwordAdmin: passwordAdmin\r\n            })\r\n            .pipe(\r\n                map(response => response)\r\n            );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SearchPipe } from '../pipes/search.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [\r\n    SearchPipe\r\n  ],\r\n  exports: [SearchPipe]\r\n})\r\nexport class SharedModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  endpoint: 'http://localhost:8080/api'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}