{"version":3,"sources":["webpack:///./src/app/domain/test_db/base/ricette.base.ts","webpack:///./src/app/domain/test_db/ricette.ts","webpack:///./src/app/pages/ricette-edit/ricette-edit-routing.module.ts","webpack:///./src/app/pages/ricette-edit/ricette-edit.component.css","webpack:///./src/app/pages/ricette-edit/ricette-edit.component.html","webpack:///./src/app/pages/ricette-edit/ricette-edit.component.ts","webpack:///./src/app/pages/ricette-edit/ricette-edit.module.ts"],"names":[],"mappings":"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","file":"pages-ricette-edit-ricette-edit-module.js","sourcesContent":["/**\r\n *\r\n *\r\n  _____                      _              _ _ _     _   _     _        __ _ _\r\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\r\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\r\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\r\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\r\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\r\n\r\n\r\n * DO NOT EDIT THIS FILE!!\r\n *\r\n *  TO CUSTOMIZE RicetteBase PLEASE EDIT ../ricette.ts\r\n *\r\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\r\n *\r\n */\r\nimport { User } from '../user';\r\n\r\n/**\r\n * This is the model of Ricette object\r\n *\r\n */\r\nexport class RicetteBase {\r\n\r\n    constructor() { }\r\n\r\n    public _id: string;\r\n    public Ingredienti: string;\r\n    public Nome: string;\r\n    public Procedimento: string;\r\n    // Relations Posseduta\r\n    public Posseduta: User | string;\r\n}\r\n","import { RicetteBase } from './base/ricette.base';\r\n\r\n/**\r\n * YOU CAN OVERRIDE HERE RicetteBase.ts\r\n */\r\nexport class Ricette extends RicetteBase {\r\n\r\n    // Insert here your custom attributes and function\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RicetteEditComponent } from './ricette-edit.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RicetteEditComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RicetteEditRoutingModule { }\r\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\r\\n<div class=\\\"mb-40 mt-40\\\">\\r\\n    <h1>Ricette</h1>\\r\\n</div>\\r\\n<div class=\\\"card mb-40\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title border-bottom border-italia\\\">\\r\\n            <i class=\\\"fa fa-search\\\"></i> Dettaglio\\r\\n        </h5>\\r\\n        <form #editForm=\\\"ngForm\\\" [ngClass]=\\\"{'was-validated': formValid!=null}\\\">\\r\\n            <div class=\\\"row mt-40 justify-content-md-center\\\">\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Ingredienti\\\" [(ngModel)]=\\\"item.Ingredienti\\\" name=\\\"Ingredienti\\\" #Ingredienti=\\\"ngModel\\\" required>\\r\\n                        <label [className]=\\\"item.Ingredienti && item.Ingredienti.length > 0 ? 'active' : ''\\\" for=\\\"Ingredienti\\\">Ingredienti *</label>\\r\\n                        <div class=\\\"invalid-feedback\\\">Valore obbligatorio</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Nome\\\" [(ngModel)]=\\\"item.Nome\\\" name=\\\"Nome\\\" #Nome=\\\"ngModel\\\" required>\\r\\n                        <label [className]=\\\"item.Nome && item.Nome.length > 0 ? 'active' : ''\\\" for=\\\"Nome\\\">Nome *</label>\\r\\n                        <div class=\\\"invalid-feedback\\\">Valore obbligatorio</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Procedimento\\\" [(ngModel)]=\\\"item.Procedimento\\\" name=\\\"Procedimento\\\" #Procedimento=\\\"ngModel\\\" required>\\r\\n                        <label [className]=\\\"item.Procedimento && item.Procedimento.length > 0 ? 'active' : ''\\\" for=\\\"Procedimento\\\">Procedimento *</label>\\r\\n                        <div class=\\\"invalid-feedback\\\">Valore obbligatorio</div>\\r\\n                    </div>\\r\\n                    <!-- RELATIONS -->\\r\\n                    <h2 class=\\\"mb-20 mt-40\\\">Relazioni</h2>\\r\\n\\r\\n                    <label for=\\\"User\\\">User</label>\\r\\n                    <select name=\\\"Posseduta\\\" id=\\\"Posseduta\\\" [(ngModel)]=\\\"item.Posseduta\\\" class=\\\"form-control\\\" #Posseduta=\\\"ngModel\\\"  >\\r\\n                        <option disabled selected>Seleziona una opzione</option>                                                    \\r\\n                        <option *ngFor=\\\"let item of listPosseduta\\\" [value]=\\\"item._id\\\">{{item._id}}</option>\\r\\n                    </select>\\r\\n\\r\\n\\r\\n                    \\r\\n        \\r\\n\\r\\n                    <!-- BUTTON BAR -->\\r\\n                    <div class=\\\"mt-40\\\">\\r\\n                        <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"save(editForm.valid, item)\\\">Salva</button>\\r\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" (click)=\\\"goBack()\\\">Torna alla lista</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","// Import Libraries\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\n// Import Services\r\nimport { RicetteService } from '../../services/ricette.service';\r\nimport { UserService } from '../../services/user.service';\r\n// Import Models\r\nimport { Ricette } from '../../domain/test_db/ricette';\r\nimport { User } from '../../domain/test_db/user';\r\n\r\n// START - USED SERVICES\r\n/**\r\n* RicetteService.create\r\n*\t@description CRUD ACTION create\r\n*\r\n* RicetteService.get\r\n*\t@description CRUD ACTION get\r\n*\t@param ObjectId id Id \r\n*\r\n* UserService.list\r\n*\t@description CRUD ACTION list\r\n*\r\n* RicetteService.update\r\n*\t@description CRUD ACTION update\r\n*\t@param ObjectId id Id\r\n*\r\n*/\r\n// END - USED SERVICES\r\n\r\n/**\r\n * This component allows to edit a Ricette\r\n */\r\n@Component({\r\n    selector: 'app-ricette-edit',\r\n    templateUrl: 'ricette-edit.component.html',\r\n    styleUrls: ['ricette-edit.component.css']\r\n})\r\nexport class RicetteEditComponent implements OnInit {\r\n    item: Ricette;\r\n    listPosseduta: User[];\r\n    model: Ricette;\r\n    formValid: Boolean;\r\n\r\n    constructor(\r\n    private ricetteService: RicetteService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private location: Location) {\r\n        // Init item\r\n        this.item = new Ricette();\r\n    }\r\n\r\n    /**\r\n     * Init\r\n     */\r\n    ngOnInit() {\r\n        this.route.params.subscribe(param => {\r\n            const id: string = param['id'];\r\n            if (id !== 'new') {\r\n                this.ricetteService.get(id).subscribe(item => this.item = item);\r\n            }\r\n            // Get relations\r\n            this.userService.list().subscribe(list => this.listPosseduta = list);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Save Ricette\r\n     *\r\n     * @param {boolean} formValid Form validity check\r\n     * @param Ricette item Ricette to save\r\n     */\r\n    save(formValid: boolean, item: Ricette): void {\r\n        this.formValid = formValid;\r\n        if (formValid) {\r\n            if (item._id) {\r\n                this.ricetteService.update(item).subscribe(data => this.goBack());\r\n            } else {\r\n                this.ricetteService.create(item).subscribe(data => this.goBack());\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Go Back\r\n     */\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RicetteEditComponent } from './ricette-edit.component';\r\nimport { RicetteEditRoutingModule } from './ricette-edit-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RicetteEditRoutingModule,\r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RicetteEditComponent\r\n  ]\r\n})\r\nexport class RicetteEditModule { }\r\n"],"sourceRoot":""}