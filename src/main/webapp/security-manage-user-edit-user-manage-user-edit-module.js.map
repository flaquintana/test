{"version":3,"sources":["webpack:///./src/app/security/manage-user/edit-user/manage-user-edit-routing.module.ts","webpack:///./src/app/security/manage-user/edit-user/manage-user-edit.component.html","webpack:///./src/app/security/manage-user/edit-user/manage-user-edit.component.ts","webpack:///./src/app/security/manage-user/edit-user/manage-user-edit.module.ts"],"names":[],"mappings":"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","file":"security-manage-user-edit-user-manage-user-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageUserEditComponent } from './manage-user-edit.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ManageUserEditComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManageUserEditRoutingModule { }\r\n","module.exports = \"<!-- TITLE -->\\r\\n<div class=\\\"mb-40 mt-40\\\">\\r\\n    <h1>Utente</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-title border-bottom border-italia\\\">\\r\\n            <i class=\\\"fa fa-search\\\"></i> Profilo\\r\\n        </div>\\r\\n        <form #editForm=\\\"ngForm\\\" *ngIf=\\\"user\\\">\\r\\n            <div class=\\\"row justify-content-md-center\\\">\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"active\\\" for=\\\"username\\\">Username</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required [disabled]=\\\"user._id\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!user._id\\\">\\r\\n                        <label for=\\\"name\\\">Password</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!user._id\\\">\\r\\n                        <label for=\\\"name\\\">Conferma Password</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordConfirm\\\" [(ngModel)]=\\\"user.passwordConfirm\\\" name=\\\"passwordConfirm\\\" #passwordConfirm=\\\"ngModel\\\" required>\\r\\n                    </div>\\r\\n                    <!-- ROLE MANAGEMENT -->\\r\\n                    <h3>Ruoli</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group col-12\\\">\\r\\n                            <label for=\\\"newRole\\\">Nuovo ruolo...</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newRole\\\" name=\\\"newRole\\\" #newRole>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <span class=\\\"btn btn-primary text-center pull-right mb-20\\\" (click)=\\\"addRole(newRole)\\\">\\r\\n                                <i class=\\\"fa fa-plus\\\"></i>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- NO ROLES -->\\r\\n                    <label *ngIf=\\\"!user.roles || user.roles.length==0\\\">\\r\\n                        Nessun ruolo assegnato all'utente\\r\\n                    </label>\\r\\n                    <!-- NO ROLES -->\\r\\n                    <div *ngFor=\\\"let role of user.roles; let i = index; trackBy:trackByFn\\\" class=\\\"row mt-2\\\">\\r\\n                        <div class=\\\"form-group\\\" class=\\\"col-8\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"role{{i}}\\\" [(ngModel)]=\\\"user.roles[i]\\\" name=\\\"roles{{i}}\\\">\\r\\n                        </div>\\r\\n                        <span class=\\\"btn btn-outline-primary btn-xs col-3\\\" (click)=\\\"removeRole(i)\\\">\\r\\n                            Rimuovi\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"mt-40\\\">\\r\\n                        <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"user._id\\\" data-toggle=\\\"modal\\\" data-target=\\\"#changePasswordModal\\\">Cambia Password</button>\\r\\n                        <button class=\\\"btn btn-primary pull-right\\\" color=\\\"primary\\\" [disabled]=\\\"editForm.invalid\\\" (click)=\\\"save()\\\">Salva</button>\\r\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" routerLink=\\\"/manage-users\\\">Torna alla lista utenti</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"changePasswordModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><i class=\\\"fa fa-lock\\\"></i>&nbsp;&nbsp;Cambia password</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                  </button>\\r\\n            </div>\\r\\n            <form #changePasswordForm=\\\"ngForm\\\" class=\\\"container-fluid\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row justify-content-md-center\\\">\\r\\n                        <div class=\\\"col-10\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"passwordAdmin\\\">Password Admin</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordAdmin\\\" [(ngModel)]=\\\"passwordAdmin\\\" name=\\\"passwordAdmin\\\" #passwordAdminForm=\\\"ngModel\\\" required>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"passwordNew\\\">Nuova Password</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNew\\\" [(ngModel)]=\\\"passwordNew\\\" name=\\\"passwordNew\\\" #passwordNewForm=\\\"ngModel\\\" required>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"passwordNewConfirm\\\">Conferma Nuova Password</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNewConfirm\\\" [(ngModel)]=\\\"passwordNewConfirm\\\" name=\\\"passwordNewConfirm\\\" #passwordNewConfirmForm=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm}\\\"\\r\\n                                    required>\\r\\n                                <p *ngIf=\\\"passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm\\\" class=\\\"help-block\\\">Le passwords non coincidono</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"showError\\\" class=\\\"row justify-content-md-center\\\">\\r\\n                <div class=\\\"alert alert-danger text-left\\\">\\r\\n                    <strong>Error!</strong> Password di Admin non valida\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" #closeModal class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Annulla</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"changePasswordForm.invalid || (passwordAdmin && passwordNewConfirm && passwordNew !== passwordNewConfirm)\\\" (click)=\\\"changePassword()\\\">Salva</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { User } from 'src/app/domain/test_db/user';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AuthenticationService } from 'src/app/security/authentication.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\n\r\ndeclare var jQuery: any;\r\n/**\r\n * Edit user by Admin\r\n */\r\n@Component({\r\n    selector: 'app-manage-user-edit',\r\n    templateUrl: './manage-user-edit.component.html',\r\n})\r\nexport class ManageUserEditComponent implements OnInit {\r\n\r\n    user: User;\r\n    passwordNew: string;\r\n    passwordNewConfirm: string;\r\n    passwordAdmin: string;\r\n    showError: boolean;\r\n    @ViewChild('closeModal') closeModal: ElementRef;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private authenticationService: AuthenticationService,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.route.params.subscribe(params => {\r\n\r\n            if (params.id === 'new') {\r\n                // New User\r\n                this.user = new User(null, null, null, []);\r\n            } else {\r\n                // Get User\r\n                this.userService.get(params.id).subscribe(user => this.user = user);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save or create User\r\n     */\r\n    save(): void {\r\n        if (this.user._id) {\r\n            // Save\r\n            this.userService.update(this.user).subscribe(data => this.router.navigateByUrl('/manage-users'));\r\n        } else {\r\n            // Create\r\n            this.user.password = Md5.hashStr(this.user.password).toString();\r\n            this.userService.create(this.user).subscribe(data => this.router.navigateByUrl('/manage-users'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete user\r\n     */\r\n    deleteUser(): void {\r\n        this.userService.remove(this.user._id).subscribe(data => this.router.navigateByUrl('/manage-users'));\r\n    }\r\n\r\n    /**\r\n     * Add roles to user\r\n     *\r\n     * @param {*} role Role to add\r\n     */\r\n    addRole(role: any): void {\r\n        if (role.value) {\r\n            this.user.roles.push(role.value);\r\n            role.value = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove role from user\r\n     *\r\n     * @param {number} index Index of the role in the array\r\n     */\r\n    removeRole(index: number) {\r\n        this.user.roles.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Change user password\r\n     */\r\n    changePassword() {\r\n        const passwordNew = Md5.hashStr(this.passwordNew).toString();\r\n        const passwordAdmin = Md5.hashStr(this.passwordAdmin).toString();\r\n\r\n        this.userService.changePassword(this.user._id, passwordNew, passwordAdmin).subscribe(data => {\r\n            this.passwordAdmin = null;\r\n            this.passwordNew = null;\r\n            this.passwordNewConfirm = null;\r\n            this.showError = false;\r\n            this.closeModal.nativeElement.click();\r\n        }, err => {\r\n            this.showError = true;\r\n        });\r\n    }\r\n\r\n    trackByFn(index: number, item: any) {\r\n        return index;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ManageUserEditRoutingModule } from './manage-user-edit-routing.module';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { ManageUserEditComponent } from './manage-user-edit.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ManageUserEditRoutingModule,\r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ManageUserEditComponent\r\n  ]\r\n})\r\nexport class ManageUserEditModule { }\r\n"],"sourceRoot":""}