{"version":3,"sources":["webpack:///./src/app/pages/login/login-routing.module.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACJ;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf/B,uB;;;;;;;;;;;ACAA,6nBAA6nB,mGAAmG,uuBAAuuB,mGAAmG,4xC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhgD;AACS;AAGf;AACK;AACa;AACuB;AAO7E;IAII,wBACY,eAAgC,EAChC,MAAc;QADd,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAL1B,SAAI,GAAS,IAAI,gEAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAM3C,CAAC;IACJ,8BAAK,GAAL,UAAM,IAAY;QAAlB,iBAaC;QAZG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAM,OAAO,GAAG,mDAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC3D,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3G,SAAS,CACN,cAAI;gBACA,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EACD,aAAG,IAAI,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAC/B,CAAC;QACN,CAAC;IACL,CAAC;IACO,gCAAO,GAAf,UAAgB,IAAU;QACtB,mEAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAxBQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;;SAGxB,CAAC;yCAM+B,0FAAe;YACxB,sDAAM;OANjB,cAAc,CAyB1B;IAAD,qBAAC;CAAA;AAzB0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACdc;AACM;AACI;AACS;AACf;AAY7C;IAAA;IAA2B,CAAC;IAAf,WAAW;QAVvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,0DAAW;aACZ;YACD,YAAY,EAAE;gBACZ,+DAAc;aACf;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"row justify-content-md-center mt-40\\\">\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <h2>Benvenuto in</h2>\\r\\n                    <h2 class=\\\"mb-40\\\">test</h2>\\r\\n                </div>\\r\\n                <form #loginForm=\\\"ngForm\\\">\\r\\n                    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">\\r\\n                        Username o Password non validi\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'was-validated': (loginForm.submitted && username.invalid) || (username.dirty && username.invalid)}\\\">\\r\\n                        <i class=\\\"ico-prefix it-mail\\\"></i>\\r\\n                        <label for=\\\"username\\\" [className]=\\\"username ? 'active' : ''\\\">Username</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\"\\r\\n                            #username=\\\"ngModel\\\" required>\\r\\n                        <div *ngIf=\\\"(loginForm.submitted && username.invalid) || (username.dirty && username.invalid)\\\"\\r\\n                            class=\\\"alert alert-danger\\\">\\r\\n                            Username obbligatorio\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'was-validated': (loginForm.submitted && password.invalid) || (password.dirty && password.invalid)}\\\">\\r\\n                        <i class=\\\"ico-prefix it-lock\\\"></i>\\r\\n                        <label for=\\\"password\\\" [className]=\\\"password ? 'active' : ''\\\">Password</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\"\\r\\n                            #password=\\\"ngModel\\\" required>\\r\\n                        <div *ngIf=\\\"(loginForm.submitted && password.invalid) || (password.dirty && password.invalid)\\\"\\r\\n                            class=\\\"alert alert-danger\\\">\\r\\n                            Password obbligatoria\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <div class=\\\"form-check\\\">\\r\\n                            <input id=\\\"checkbox1\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"remember\\\" name=\\\"remember\\\">\\r\\n                            <label for=\\\"checkbox1\\\">Ricorda login</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"clearfix\\\"></div>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"login(loginForm)\\\">Login</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { User } from 'src/app/domain/test_db/user';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthenticationService } from 'src/app/security/authentication.service';\r\nimport {Md5} from 'ts-md5/dist/md5';\r\nimport { Router } from '@angular/router';\r\nimport { store } from 'src/app/security/current-user';\r\nimport { SecurityService } from 'src/app/security/services/security.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n    user: User = new User(null, null, null, null);\r\n    showError: boolean;\r\n    remember: boolean;\r\n    constructor(\r\n        private securityService: SecurityService,\r\n        private router: Router\r\n    ) {}\r\n    login(form: NgForm) {\r\n        if (form.valid) {\r\n            const md5pass = Md5.hashStr(this.user.password).toString();\r\n            this.securityService.login(this.user.username, md5pass, this.remember === undefined ? false : this.remember)\r\n            .subscribe(\r\n                user => {\r\n                    this.showError = false;\r\n                    this.router.navigate(['/']);\r\n                    this.setUser(user);\r\n                },\r\n                err => this.showError = true\r\n            );\r\n        }\r\n    }\r\n    private setUser(user: User) {\r\n        store.setUser(user);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":""}